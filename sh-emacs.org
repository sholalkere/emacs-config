#+STARTUP: overview
* visual settings
#+begin_src emacs-lisp
  ;;(load-theme 'modus-vivendi)
  (global-hl-line-mode)
#+end_src

* visual packages
#+begin_src emacs-lisp
  (use-package doom-themes
    :init
    (load-theme 'doom-horizon t))
#+end_src
* exec path from shell
#+begin_src emacs-lisp
  (use-package exec-path-from-shell
    :ensure t
    :config
    (exec-path-from-shell-initialize))
#+end_src

* which key
#+begin_src emacs-lisp
  (use-package which-key
    :config
    (which-key-mode))
#+end_src

* evil
#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-want-integration t)
    (setq evil-want-keybinding nil)
    :config
    (evil-mode 1))

  (use-package evil-collection
    :after evil
    :config
    (evil-collection-init))
#+end_src

* vertico
#+begin_src emacs-lisp
  (use-package vertico
    :init
    (vertico-mode))	

  (use-package orderless
    :init
    (setq completion-styles '(orderless))
    (setq   completion-category-overrides '((file (styles basic partial-completion)))))

  (use-package marginalia
    :init
    (marginalia-mode))
#+end_src

* company
#+begin_src emacs-lisp
  (use-package company
    :hook
    (after-init . global-company-mode))
#+end_src

* yasnippet
#+begin_src emacs-lisp
  (use-package yasnippet
    :init
    (yas-global-mode 1))

  (use-package yasnippet-snippets)
#+end_src

* projectile
#+begin_src emacs-lisp
  (use-package projectile
    :config
    (projectile-global-mode))
#+end_src

* perpective
#+begin_src emacs-lisp
  (use-package perspective
    :bind (("C-x b" . persp-switch-to-buffer*))
    :config
    (setq persp-state-default-file "~/.emacs.d/persp-state")
    (persp-mode))
#+end_src

* Git
#+begin_src emacs-lisp
  (use-package magit)
  (use-package git-gutter
    :init
    (global-git-gutter-mode +1))
#+end_src

* languages
** latex
#+begin_src emacs-lisp
  (use-package tex-mode
    :straight auctex
    :config
    (setq TeX-save-query nil))

  (use-package company-auctex
    :config
    (company-auctex-init))

  (use-package pdf-tools
    :config
    (pdf-loader-install)
    (setq pdf-view-use-scaling t))

  (use-package latex-preview-pane
    :bind (("C-c l" . latex-preview-pane-mode)))
#+end_src

** ocaml
#+begin_src emacs-lisp
  
#+end_src

